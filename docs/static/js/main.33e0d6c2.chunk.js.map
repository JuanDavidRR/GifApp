{"version":3,"sources":["components/gifs/AddCategory.js","helpers/getGifs.js","components/gifs/GridItemGif.js","components/gifs/GridGif.js","hooks/useFetchGifs.js","helpers/getTrending.js","components/gifs/TrendingGifs.js","components/gifs/GifApp.js","components/stickers/GridStikers.js","helpers/getTrendStickers.js","components/stickers/TrendingStickers.js","components/stickers/StickerApp.js","Home.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","gifValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","alert","onSubmit","type","id","name","value","onChange","target","placeholder","className","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","title","images","downsized_medium","console","error","getStickers","stickers","GridItemGif","alt","src","GridGif","loading","state","setstate","useEffect","then","imgs","useFetchGifs","toUpperCase","gif","getTrendingGifs","log","TrendingGifs","trendings","setTrandings","i","GifApp","categories","GridStickers","useFetchStickers","getTrendStickers","TrendingStickers","StikerApp","Home","to","href","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4MA4CeA,EAzCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBACnCC,EADmC,KACzBC,EADyB,KAOpCC,EAAe,SAACC,GACrBA,EAAEC,iBACEJ,EAASK,OAAOC,OAAS,GAC5BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAwBO,OACtCN,EAAc,KAEdO,MAAM,yBAIR,OACC,mCACC,uBAAMC,SAAUP,EAAhB,UACC,uBACCQ,KAAK,OACLC,GAAG,WACHC,KAAK,WACLC,MAAOb,EACPc,SAtBqB,SAACX,GACzBF,EAAcE,EAAEY,OAAOF,QAsBpBG,YAAY,2BAEb,uBACCC,UAAU,UACVP,KAAK,SACLD,SAAUP,EACVW,MAAM,iB,+BCnCEK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEAEfC,EAFe,0FAE0EC,UAC9FH,GAHoB,+CAKHI,MAAMF,GALH,cAKfG,EALe,gBAMEA,EAAIC,OANN,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNlB,GAAIkB,EAAIlB,GACRmB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXf,kBAedM,GAfc,kCAiBrBM,QAAQC,MAAM,cAjBO,0DAAH,sDAqBPC,EAAW,uCAAG,WAAOhB,GAAP,uBAAAC,EAAA,sEAEnBC,EAFmB,8FAE0EC,UAClGH,GAHwB,+CAKPI,MAAMF,GALC,cAKnBG,EALmB,gBAMFA,EAAIC,OANF,uBAMjBC,EANiB,EAMjBA,KACFU,EAAWV,EAAKE,KAAI,SAACC,GAAS,IAAD,EAClC,MAAO,CACNlB,GAAIkB,EAAIlB,GACRmB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXX,kBAelBe,GAfkB,kCAiBzBH,QAAQC,MAAM,cAjBW,0DAAH,sDCnBXG,EAAc,SAAC,GAAoB,IAAlBP,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACpC,OACC,sBAAKJ,UAAU,6CAAf,UACC,qBAAKqB,IAAKR,EAAOS,IAAKlB,IACtB,4BAAIS,QCFMU,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACfpB,mBAAS,CAClC2B,KAAM,GACNe,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACT1B,EAAQC,GAAU0B,MAAK,SAACC,GACvBH,EAAS,CACRjB,KAAMoB,EACNL,SAAS,SAGT,CAACtB,IAEGuB,EDb2BK,CAAa5B,GAAjCY,EAD0B,EAChCL,KAAce,EADkB,EAClBA,QACtB,OACC,qCACC,qBAAIxB,UAAU,wCAAd,0BACeE,EAAS6B,iBAEvBP,GAAW,yCACZ,qBAAKxB,UAAU,YAAf,SACEc,EAAOH,KAAI,SAACqB,GACZ,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAItC,aEdrBuC,EAAe,uCAAG,oCAAA9B,EAAA,sEAEvBC,EAFuB,mGAG7BY,QAAQkB,IAAI9B,GAHiB,SAIXE,MAAMF,GAJK,cAIvBG,EAJuB,gBAKNA,EAAIC,OALE,uBAKrBC,EALqB,EAKrBA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNlB,GAAIkB,EAAIlB,GACRmB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVP,kBActBM,GAdsB,kCAgB7BM,QAAQC,MAAM,cAhBe,0DAAH,qDCIfkB,EAAe,WAAO,IAAD,EACCrD,mBAAS,IADV,mBAC1BsD,EAD0B,KACfC,EADe,KAMjC,OAJAV,qBAAU,WACTM,IAAkBL,KAAKS,KACrB,IAGF,mCACED,EAAUzB,KAAI,SAACC,EAAK0B,GAAN,OACd,cAAC,EAAD,eAAyB1B,GAAP0B,SCgCPC,EAxCA,WAAO,IAAD,EACgBzD,mBAAS,IADzB,mBACb0D,EADa,KACD3D,EADC,KAKpB,OACC,mCACC,sBAAKmB,UAAU,mDAAf,UACC,uBACA,sCAKA,cAAC,EAAD,CAAanB,cAAeA,IAE5B,uBAUA,6BACE2D,EAAW7B,KAAI,SAACT,EAAUoC,GAAX,OACf,cAAC,EAAD,CAAiBpC,SAAUA,GAAboC,QAGhB,uDACA,qBAAKtC,UAAU,YAAf,SACC,cAAC,EAAD,YCnCQyC,EAAe,SAAC,GAAkB,IAAhBvC,EAAe,EAAfA,SAAe,EJkBd,SAACA,GAAc,IAAD,EACnBpB,mBAAS,CAClC2B,KAAM,GACNe,SAAS,IAHmC,mBACtCC,EADsC,KAC/BC,EAD+B,KAe7C,OATAC,qBAAU,WACTT,EAAYhB,GAAU0B,MAAK,SAACC,GAC3BH,EAAS,CACRjB,KAAMoB,EACNL,SAAS,SAGT,CAACtB,IAEGuB,EIhC2BiB,CAAiBxC,GAArCY,EAD+B,EACrCL,KAAce,EADuB,EACvBA,QACtB,OACC,qCACC,qBAAIxB,UAAU,wCAAd,0BACeE,KAEdsB,GAAW,yCACZ,qBAAKxB,UAAU,YAAf,SACEc,EAAOH,KAAI,SAACqB,GACZ,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAItC,aCbrBiD,EAAgB,uCAAG,oCAAAxC,EAAA,sEAExBC,EAFwB,iHAI9BY,QAAQkB,IAAI9B,GAJkB,SAKZE,MAAMF,GALM,cAKxBG,EALwB,gBAMPA,EAAIC,OANG,uBAMtBC,EANsB,EAMtBA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNlB,GAAIkB,EAAIlB,GACRmB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXN,kBAevBM,GAfuB,kCAiB9BM,QAAQC,MAAM,cAjBgB,0DAAH,qDCIhB2B,EAAmB,WAAO,IAAD,EACH9D,mBAAS,IADN,mBAC9BsD,EAD8B,KACnBC,EADmB,KAMrC,OAJAV,qBAAU,WACTgB,IAAmBf,KAAKS,KACtB,IAGF,mCACED,EAAUzB,KAAI,SAACC,EAAK0B,GAAN,OACd,cAAC,EAAD,eAAyB1B,GAAP0B,SCkCPO,EAzCG,WAAO,IAAD,EACa/D,mBAAS,IADtB,mBAChB0D,EADgB,KACJ3D,EADI,KAKvB,OACC,sBAAKmB,UAAU,mDAAf,UACC,uBACA,0CAIA,cAAC,EAAD,CACCnB,cAAeA,IAKhB,uBAUA,6BACE2D,EAAW7B,KAAI,SAACT,EAAUoC,GAAX,OACf,cAAC,EAAD,CAAsBpC,SAAUA,GAAboC,QAGrB,2DACA,qBAAKtC,UAAU,YAAf,SACC,cAAC,EAAD,UCUW8C,EA1CF,WACZ,OACC,mCACC,qBAAK9C,UAAU,aAAf,SACC,eAAC,IAAD,WACC,+BACC,cAAC,IAAD,CAAM+C,GAAI,QAAV,SACC,oBAAIC,KAAK,IAAT,wBAGD,cAAC,IAAD,CAAMD,GAAI,YAAV,SACC,oBAAIC,KAAK,YAAT,0BAGD,cAAC,IAAD,CAAMD,GAAI,QAAV,SACC,oBAAIC,KAAK,QAAT,sBAGD,6BACC,qBACChD,UAAU,OACVqB,IAAI,OACJC,IAAI,oFAKP,eAAC,IAAD,WACC,cAAC,IAAD,CAAQ2B,KAAK,QAAb,SACC,cAAC,EAAD,CAAQjD,UAAU,wCAGnB,cAAC,IAAD,CAAQiD,KAAK,YAAb,SACC,cAAC,EAAD,CAAWjD,UAAU,mDC9BbkD,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAKlDX,M","file":"static/js/main.33e0d6c2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [gifValue, setInputValue] = useState(\"\");\r\n\t// const [nGifValue, setnGifValue] = useState(\"\");\r\n\tconst handeInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (gifValue.trim().length > 1) {\r\n\t\t\tsetCategories((cats) => [gifValue, ...cats]);\r\n\t\t\tsetInputValue(\"\");\r\n\t\t} else {\r\n\t\t\talert(\"Llene eso bien, vago\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"gifValue\"\r\n\t\t\t\t\tname=\"gifValue\"\r\n\t\t\t\t\tvalue={gifValue}\r\n\t\t\t\t\tonChange={handeInputChange}\r\n\t\t\t\t\tplaceholder=\"Buscar Gifs (Ej. Goku)\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"search \"\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\tvalue=\"Buscar\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n\ttry {\r\n\t\tconst url = `https://api.giphy.com/v1/gifs/search?api_key=5k6bE6hRvssuTstrgX6n5AlaRSmCkg8n&q=${encodeURI(\r\n\t\t\tcategory\r\n\t\t)}&limit=9&offset=0&rating=r&lang=en`;\r\n\t\tconst res = await fetch(url);\r\n\t\tconst { data } = await res.json();\r\n\t\tconst gifs = data.map((img) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn gifs;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"vale verga\");\r\n\t}\r\n};\r\n\r\nexport const getStickers = async (category) => {\r\n\ttry {\r\n\t\tconst url = `https://api.giphy.com/v1/stickers/search?api_key=5k6bE6hRvssuTstrgX6n5AlaRSmCkg8n&q=${encodeURI(\r\n\t\t\tcategory\r\n\t\t)}&limit=9&offset=0&rating=r&lang=en`;\r\n\t\tconst res = await fetch(url);\r\n\t\tconst { data } = await res.json();\r\n\t\tconst stickers = data.map((img) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn stickers;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"vale verga\");\r\n\t}\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GridItemGif = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__rubberBand\">\r\n\t\t\t<img alt={title} src={url}></img>\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../../hooks/useFetchGifs\";\r\nimport { GridItemGif } from \"./GridItemGif\";\r\n\r\nexport const GridGif = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4 className=\"animate__animated animate__backInLeft\">\r\n\t\t\t\tHas buscado: {category.toUpperCase()}\r\n\t\t\t</h4>\r\n\t\t\t{loading && <p>Cargando</p>}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((gif) => {\r\n\t\t\t\t\treturn <GridItemGif key={gif.id} {...gif} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs, getStickers } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\tsetstate({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n\r\nexport const useFetchStickers = (category) => {\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStickers(category).then((imgs) => {\r\n\t\t\tsetstate({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","export const getTrendingGifs = async () => {\r\n\ttry {\r\n\t\tconst url = `https://api.giphy.com/v1/gifs/trending?api_key=pLG9epdt5AYw6xeyAT2QYpG487qGv4qW&limit=9&rating=g`;\r\n\t\tconsole.log(url);\r\n\t\tconst res = await fetch(url);\r\n\t\tconst { data } = await res.json();\r\n\t\tconst gifs = data.map((img) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn gifs;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"vale verga\");\r\n\t}\r\n};\r\n\r\nexport const getTrendingStickers = async () => {\r\n\ttry {\r\n\t\tconst url = `https://api.giphy.com/v1/stickers/trending?api_key=pLG9epdt5AYw6xeyAT2QYpG487qGv4qW&limit=9&rating=g\r\n\t\t`;\r\n\t\tconsole.log(url);\r\n\t\tconst res = await fetch(url);\r\n\t\tconst { data } = await res.json();\r\n\t\tconst gifs = data.map((img) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn gifs;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"vale verga\");\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getTrendingGifs } from \"../../helpers/getTrending\";\r\nimport { GridItemGif } from \"../gifs/GridItemGif\";\r\n\r\nexport const TrendingGifs = () => {\r\n\tconst [trendings, setTrandings] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tgetTrendingGifs().then(setTrandings);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{trendings.map((img, i) => (\r\n\t\t\t\t<GridItemGif key={i} {...img} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport { GridGif } from \"./GridGif\";\r\nimport { TrendingGifs } from \"./TrendingGifs\";\r\n\r\nconst GifApp = () => {\r\n\tconst [categories, setCategories] = useState([]);\r\n\t// const [random, setRandom] = useState(false);\r\n\t// const onClick = () => setRandom(!random);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container-grid animate__animated animate__fadeIn\">\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<h1>GIFs</h1>\r\n\t\t\t\t{/* \r\n\t\t\t<button className=\"random\" onClick={onClick}>\r\n\t\t\t\tMostrar/Ocultar\r\n\t\t\t</button> */}\r\n\t\t\t\t<AddCategory setCategories={setCategories} />\r\n\r\n\t\t\t\t<hr />\r\n\t\t\t\t{/* {random ? (\r\n\t\t\t\t\t<div className=\"card-grid animated__animated\">\r\n\t\t\t\t\t\t<h3 className=\"animate__animated animate__rubberBand\">\r\n\t\t\t\t\t\t\tStickers en tedencia\r\n\t\t\t\t\t\t\t<small>Ocultalos dando nuevamente al botón</small>\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<TrendingStickers />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null} */}\r\n\t\t\t\t<ol>\r\n\t\t\t\t\t{categories.map((category, i) => (\r\n\t\t\t\t\t\t<GridGif key={i} category={category} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ol>\r\n\t\t\t\t<h2>Top Gifs de la semana</h2>\r\n\t\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t\t<TrendingGifs />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifApp;\r\n","import { useFetchStickers } from \"../../hooks/useFetchGifs\";\r\nimport { GridItemGif } from \"../gifs/GridItemGif\";\r\n\r\nexport const GridStickers = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchStickers(category);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4 className=\"animate__animated animate__backInLeft\">\r\n\t\t\t\tHas buscado: {category}\r\n\t\t\t</h4>\r\n\t\t\t{loading && <p>Cargando</p>}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((gif) => {\r\n\t\t\t\t\treturn <GridItemGif key={gif.id} {...gif} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{}\r\n\t\t</>\r\n\t);\r\n};\r\n","export const getTrendStickers = async () => {\r\n\ttry {\r\n\t\tconst url = `https://api.giphy.com/v1/stickers/trending?api_key=5k6bE6hRvssuTstrgX6n5AlaRSmCkg8n&limit=9&rating=g\r\n        `;\r\n\t\tconsole.log(url);\r\n\t\tconst res = await fetch(url);\r\n\t\tconst { data } = await res.json();\r\n\t\tconst gifs = data.map((img) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn gifs;\r\n\t} catch (error) {\r\n\t\tconsole.error(\"vale verga\");\r\n\t}\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getTrendStickers } from \"../../helpers/getTrendStickers\";\r\nimport { GridItemGif } from \"../gifs/GridItemGif\";\r\n\r\nexport const TrendingStickers = () => {\r\n\tconst [trendings, setTrandings] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tgetTrendStickers().then(setTrandings);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{trendings.map((img, i) => (\r\n\t\t\t\t<GridItemGif key={i} {...img} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"../gifs/AddCategory\";\r\n// import { TrendingGifs } from \"../gifs/TrendingGifs\";\r\nimport { GridStickers } from \"./GridStikers\";\r\nimport { TrendingStickers } from \"./TrendingStickers\";\r\n\r\nconst StikerApp = () => {\r\n\tconst [categories, setCategories] = useState([]);\r\n\t// const [random, setRandom] = useState(false);\r\n\t// const onClick = () => setRandom(!random);\r\n\r\n\treturn (\r\n\t\t<div className=\"container-grid animate__animated animate__fadeIn\">\r\n\t\t\t<br></br>\r\n\t\t\t<h1>Stickers</h1>\r\n\t\t\t{/* <button className=\"random\" onClick={onClick}>\r\n\t\t\t\tMostrar/Ocultar\r\n\t\t\t</button> */}\r\n\t\t\t<AddCategory\r\n\t\t\t\tsetCategories={setCategories}\r\n\t\t\t\t// setNGifs={setNGifs}\r\n\t\t\t\t// setRating={setRating}\r\n\t\t\t/>\r\n\r\n\t\t\t<hr />\r\n\t\t\t{/* {random ? (\r\n\t\t\t\t<div className=\"card-grid animated__animated\">\r\n\t\t\t\t\t<h3 className=\"animate__animated animate__rubberBand\">\r\n\t\t\t\t\t\tStickers en tedencia\r\n\t\t\t\t\t\t<small>Ocultalos dando nuevamente al botón</small>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<TrendingStickers />\r\n\t\t\t\t</div>\r\n\t\t\t) : null} */}\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category, i) => (\r\n\t\t\t\t\t<GridStickers key={i} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t\t<h2>Top Stickers de la semana</h2>\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t<TrendingStickers />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StikerApp;\r\n","import React from \"react\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tLink,\r\n} from \"react-router-dom\";\r\nimport GifApp from \"./components/gifs/GifApp\";\r\nimport StikerApp from \"./components/stickers/StickerApp\";\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"navbar-gif\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<Link to={\"/gifs\"}>\r\n\t\t\t\t\t\t\t<li href=\"/\"> INICIO </li>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link to={\"/stickers\"}>\r\n\t\t\t\t\t\t\t<li href=\"/stickers\"> STICKERS </li>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link to={\"/gifs\"}>\r\n\t\t\t\t\t\t\t<li href=\"/gifs\"> GIFS </li>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"logo\"\r\n\t\t\t\t\t\t\t\talt=\"hola\"\r\n\t\t\t\t\t\t\t\tsrc=\"https://fontmeme.com/permalink/210730/8c294610de427cfb6b322001187db728.png\"\r\n\t\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Router path=\"/gifs\">\r\n\t\t\t\t\t\t\t<GifApp className=\"animate__animated animate__fadeIn\" />\r\n\t\t\t\t\t\t</Router>\r\n\r\n\t\t\t\t\t\t<Router path=\"/stickers\">\r\n\t\t\t\t\t\t\t<StikerApp className=\"animate__animated animate__fadeIn\" />\r\n\t\t\t\t\t\t</Router>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./Home\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<Home />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}